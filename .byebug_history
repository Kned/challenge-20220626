continue
data['products'].first
continue
data['products'].first
continue
data['code']
code
continue
data
continue
data
continue
set_product
continue
set_product
continue
Product.where(code: params[:id].to_i).first
Product.where(code: params[:id]).first
params[:id]
params[:code
Product.where(code: params[:code]).first
Product.first
product.first
@product
set_product
params
continue
response.body
response.status
response.stataus
response
run_test!
run_test
Product.first
data
request
data
continue
data
request
continue
request
data
continue
Product.where(code: code).first
Product.where(code: params[:code]).first
data
continue
Product.first
response.body
response
data
response
data
continue
response
Product.count
data
continue
code
Product.count
data
continue
data["products"].first["code"]
data["products].first["code"]
data["code"]
data
continue
data['products'].count
data['products']
continue
data
Product.count
continue
Product.count
Product.all
p.save
p.persisted?
p = build :product
Product.
Product.all
build :product
build product
Product.all
data
continue
data
continue
Product.count
JSON.parse(response.body)
continue
build(:product)
JSON.parse(response.body)
